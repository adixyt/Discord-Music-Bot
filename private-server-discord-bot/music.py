# Python code written by Adix
 

import base64, codecs
magic = 'ZnJvbSBhc3luY2lvIGltcG9ydCBldmVudHMNCmltcG9ydCBkaXNjb3JkDQppbXBvcnQgb3MNCmltcG9ydCBhc3luY2lvDQppbXBvcnQgeW91dHViZV9kbA0KaW1wb3J0IHRpbWUNCmltcG9ydCBzZWFyY2hlcw0KaW1wb3J0IGRhdGV0aW1lDQppbXBvcnQgc2h1dGlsDQppbXBvcnQgY29uZmlnDQpmcm9tIGRpc2NvcmQudXRpbHMgaW1wb3J0IGdldA0KZnJvbSBkaXNjb3JkLnZvaWNlX2NsaWVudCBpbXBvcnQgVm9pY2VDbGllbnQNCg0KDQojdG9rZW4gPSAiTVRBd01qa3dNVFEwTmprNU56VTROVGsxTUEuR21NUG9GLlZTb2Q3dTVwTzZZcFREVkFFNWg5U3RFWVQ2eEJGcy1YNGI1ZWJBIg0KDQpkaXNjb3JkX2NoYW5uZWxfaWQgPSBjb25maWcuZGlzY29yZF9jaGFubmVsX2lkDQpkaXNjb3JkX21lc3NhZ2VfaWQgPSBjb25maWcuZGlzY29yZF9tZXNzYWdlX2lkDQoNCmNsaWVudCA9IGRpc2NvcmQuQ2xpZW50KCkNCg0KZmZtcGVnX3BhdGggPSBzaHV0aWwud2hpY2goJ2ZmbXBlZycpDQoNCnZvaWNlX2NsaWVudHMgPSB7fQ0KDQp5dF9kbF9vcHRzID0gew0KICAgICdmb3JtYXQnOiAnYmVzdGF1ZGlvL2Jlc3QnLA0KICAgICdub3BsYXlsaXN0JzogJ0ZhbHNlJywNCiAgICAncG9zdHByb2Nlc3NvcnMnOiBbew0KICAgICAgICAna2V5JzogJ0ZGbXBlZ0V4dHJhY3RBdWRpbycsDQogICAgICAgICdwcmVmZXJyZWRjb2RlYyc6ICdhYWMnLA0KICAgICAgICAncHJlZmVycmVkcXVhbGl0eSc6ICczMjAnLA0KICAgIH1dLA0KfQ0KDQp5dGRsID0geW91dHViZV9kbC5Zb3V0dWJlREwoeXRfZGxfb3B0cykNCg0KZmZtcGVnX29wdGlvbnMgPSB7J29wdGlvbnMnOiAiLXZuIn0NCg0KbXVzaWNfcXVldWUgPSBbXQ0KDQpzb25nX3VybCA9IFtdDQoNCnBhdXNlID0gRmFsc2UNCg0KDQpoZWxwX21lc3NhZ2UgPSBmJycnXHRcdGB7Y29uZmlnLmJvdF9uYW1lfSBTdXBwb3J0YA0KXHRcdChib3QgZGV2ZWxvcGVkIGJ5IEFkaXgpDQoNCg0KDQpgUGxheSBtdXNpY2AgOiAgKipqdXN0IHR5cGUgc29uZyBuYW1lIG9yIFVSTCBiZWxvdyoqDQogICAgICAgICAgICAgICAgKFN1cHBvcnRzIFlvdXR1YmUgbXVzaWMgJiBwbGF5bGlzdCBvbmx5KQ0KDQpgUGF1c2UvUmVzdW1lIG11c2ljYCA6ICAgKirij7jvuI8qKg0KDQpgTG9vcCBtdXNpY2AgOiAgICAgICoq8J+SqyoqDQoNCmBTdG9wIG11c2ljYCA6ICAgICAgKirinY4qKg0KDQpgU2tpcCBtdXNpY2AgOiAgICAgICoq4o+t77iPKioNCg0KYFF1ZXVlIGNoZWNrYCA6ICAgICAqKj9xdWV1ZSoqDQoNCg0KJycnDQoNCkxPT1BTID0gRmFsc2UNCg0Kbm9ybWFsX2Rpc2Nvbm5lY3QgPSBOb25lDQoNCkBjbGllbnQuZXZlbnQNCmFzeW5jIGRlZiBvbl92b2ljZV9zdGF0ZV91cGRhdGUoTWVtYmVyLCBiZWZvcmUsIGFmdGVyKToNCiAgICBjaGFubmVsID0gY2xpZW50LmdldF9jaGFubmVsKGRpc2NvcmRfY2hhbm5lbF9pZCkNCg0KICAgIGlmIHN0cihNZW1iZXIpID09IHN0cihjbGllbnQudXNlcik6DQogICAgICAgIGlmIGFmdGVyLmNoYW5uZWw9PU5vbmU6DQogICAgICAgICAgICBtdXNpY19xdWV1ZS5jbGVhcigpDQogICAgICAgICAgICBzb25nX3VybC5jbGVhcigpDQogICAgICAgICAgICBnbG9iYWwgbm9ybWFsX2Rpc2Nvbm5lY3QNCiAgICAgICAgICAgIGlmIG5vcm1hbF9kaXNjb25uZWN0ICE9IFRydWU6DQogICAgICAgICAgICAgICAgbm9ybWFsX2Rpc2Nvbm5lY3QgPSBGYWxzZQ0KICAgIA0KICAgICAgICAgICAgICAgIGF3YWl0IGNoYW5uZWwuc2VuZCgiSSd2ZSBiZWVuIGtpY2tlZCBmcm9tIHZjICEiKQ0KICAgICAgICAgICAgZWxpZiBub3JtYWxfZGlzY29ubmVjdCA9PSBUcnVlOg0KICAgICAgICAgICAgICAgIG5vcm1hbF9kaXNjb25uZWN0ID0gTm9uZQ0KDQoNCkBjbGllbnQuZXZlbnQNCmFzeW5jIGRlZiBiYWNrZ3JvdW5kX3Rhc2soKToNCiAgICB3aGlsZSBUcnVlOg0KICAgICAgICBjaGFubmVsID0gY2xpZW50LmdldF9jaGFubmVsKGRpc2NvcmRfY2hhbm5lbF9pZCkNCiAgICAgICAgbWVzc2FnZSA9IGF3YWl0IGNoYW5uZWwuZmV0Y2hfbWVzc2FnZShkaXNjb3JkX21lc3NhZ2VfaWQpDQogICAgICAgIG5ld19oZWxwX21lc3NhZ2UgPSBoZWxwX21lc3NhZ2UgKyBmJ1RvdGFsICAqKntsZW4oc29uZ191cmwpfSoqICBzb25ncyBpbiBxdWV1ZScNCiAgICAgICAgZGVzaWduID0gJ19fLS1fXy0tX18tLV9fLS1fXy0tX18tLV9fLS1fXy0tX18tLV9fLS1fXy0tX18tLV9fLS1fXy0tX18tLV9fLS1fXy0tX18nDQogICAgICAgIGdsb2JhbCBub3JtYWxfZGlzY29ubmVjdA0KICAgICAgICBpZiBub3JtYWxfZGlzY29ubmVjdCA9PSBGYWxzZToNCiAgICAgICAgICAgIGF3YWl0IG1lc3NhZ2UuZWRpdChjb250ZW50ID0gZidCb3QgaGFzIGJlZW4ga2lja2VkIGZyb20gVkMsIHdhaXQgZm9yIDEgbWludXRlIHRvIHJlc2V0IC4nKQ0KICAgICAgICAgICAgYXdhaXQgYXN5bmNpby5zbGVlcCg2MCkNCiAgICAgICAgICAgIG5vcm1hbF9kaXNjb25uZWN0ID0gTm9uZQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgaWYgbGVuKHNvbmdfdXJsKSA+IDA6DQogICAgICAgICAgICAgICAgbmV3X2hlbHBfbWVzc2FnZSA9IGhlbHBfbWVzc2FnZSArIGYnVG90YWwgICoqe2xlbihzb25nX3VybCkgLSAxfSoqICBzb25ncyBpbiBxdWV1ZScNCiAgICAgICAgICAgICAgICBhd2FpdCBtZXNzYWdlLmVkaXQoY29udGVudCA9IGYne25ld19oZWxwX21lc3NhZ2V9XG4'
love = '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'
god = 'AgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnLycgaW4gdXNlcl9tZXNzYWdlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSBtc2cuY29udGVudA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAncGxheWxpc3QnIGluIHVzZXJfbWVzc2FnZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IG1zZy5jaGFubmVsLnNlbmQoJ0V4dHJhY3RpbmcgYWxsIHNvbmdzIGZyb20gcGxheWxpc3QsIGhvbGQgb24gIScpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gc2VhcmNoZXMudXJsKHVzZXJfbWVzc2FnZSkNCg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9vcCA9IGFzeW5jaW8uZ2V0X2V2ZW50X2xvb3AoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBhd2FpdCBsb29wLnJ1bl9pbl9leGVjdXRvcihOb25lLCBsYW1iZGE6IHl0ZGwuZXh0cmFjdF9pbmZvKHVybCwgZG93bmxvYWQ9RmFsc2UpKQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3BsYXlsaXN0JyBub3QgaW4gdXNlcl9tZXNzYWdlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb25nID0gZGF0YVsndXJsJ10NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbXVzaWNfcXVldWUuYXBwZW5kKHNvbmcpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlID0gZGF0YVsndGl0bGUnXQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb25nX3VybC5hcHBlbmQodGl0bGUpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxlbihzb25nX3VybCkgPiAxOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgbXNnLmNoYW5uZWwuc2VuZChmJ2B7dGl0bGV9YCBhZGRlZCB0byBxdWV1ZSAhJykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb25nID0gZGF0YVsnZW50cmllcyddDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXlsaXN0X3NvbmdfY291bnQgPSAwDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciBpIGluIHNvbmc6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdXNpY19xdWV1ZS5hcHBlbmQoaVsndXJsJ10pDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb25nX3VybC5hcHBlbmQoaVsndGl0bGUnXSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXlsaXN0X3NvbmdfY291bnQgKz0gMQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBtc2cuY2hhbm5lbC5zZW5kKGYnYHtwbGF5bGlzdF9zb25nX2NvdW50fWAgc29uZ3MgYWRkZWQgdG8gcXVldWUgIScpDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmIG5leHQoKToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2xvYmFsIExPT1BTDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIExPT1BTOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9pY2VfY2xpZW50c1ttc2cuZ3VpbGQuaWRdLnBsYXkoZGlzY29yZC5GRm1wZWdQQ01BdWRpbyhtdXNpY19xdWV1ZVswXSwgZXhlY3V0YWJsZT1mZm1wZWdfcGF0aCksIGFmdGVyPWxhbWJkYSBlOiAgbmV4dCgpKQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgbGVuKG11c2ljX3F1ZXVlKSA+IDA6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdXNpY19xdWV1ZS5wb3AoMCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvbmdfdXJsLnBvcCgwKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGVuKG11c2ljX3F1ZXVlKSA+IDA6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9pY2VfY2xpZW50c1ttc2cuZ3VpbGQuaWRdLnBsYXkoZGlzY29yZC5GRm1wZWdQQ01BdWRpbyhtdXNpY19xdWV1ZVswXSwgZXhlY3V0YWJsZT1mZm1wZWdfcGF0aCksIGFmdGVyPWxhbWJkYSBlOiAgbmV4dCgpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUNCg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdm9pY2VfY2xpZW50c1ttc2cuZ3VpbGQuaWRdLnBsYXkoZGlzY29yZC5GRm1wZWdQQ01BdWRpbyhtdXNpY19xdWV1ZVswXSwgZXhlY3V0YWJsZT1mZm1wZWdfcGF0aCksIGFmdGVyPWxhbWJkYSBlOiAgbmV4dCgpKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGVycjoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChlcnIpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgI'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
